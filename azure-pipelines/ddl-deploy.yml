trigger:
  branches:
    include:
      - develop
      - release/*
      - main
  paths:
    include:
      - 'tables/**'
      - 'modules/**'
      - 'main.tf'
      - 'catalogs.tf'
      - 'external-locations.tf'
      - 'storage-credentials.tf'
      - 'tables.tf'
      - 'outputs.tf'
      - 'variables.tf'
      - 'azure-pipelines/**'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: dbx-common
  - name: terraformVersion
    value: '1.5.7'
  - name: databricksProviderVersion
    value: '1.38.0'

stages:
  # Development Deployment
  - stage: DeployDev
    displayName: 'Deploy ORCA DDL to Development'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'))
    variables:
      - group: dbx-dev-vars
      - group: dbx-unity-dev-vars  
      - group: dbx-azure-dev-vars
      - group: dbx-common
    jobs:
      - job: DeployTerraform
        displayName: 'Deploy ORCA Tables to Dev'
        steps:
          - template: templates/terraform-deploy-steps.yml
            parameters:
              serviceConnection: 'cbs-data-preprod-mi-reporting-dev'
              environment: dev
              adGroupEnvironment: $(ad_environment_name)
              orcaCatalog: $(catalog_orca)
              orcaMetadataSchema: $(schema_orca_metadata)
              orcaRuntimeSchema: $(schema_orca_runtime)
              bronzeCatalog: $(catalog_bronze)
              silverCatalog: $(catalog_silver)
              goldCatalog: $(catalog_gold)
              platinumCatalog: $(catalog_platinum)
              storageAccountName: $(storage_account)
              storageConnectorId: $(storage_connector_id)
              databricksHost: $(databricks_host)
              enableCdfForRuntime: true
              enableCdfForMetadata: false

  # Test Deployment
  - stage: DeployTest
    displayName: 'Deploy ORCA DDL to Test'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
    variables:
      - group: dbx-test-vars
      - group: dbx-unity-test-vars  
      - group: dbx-azure-test-vars
      - group: dbx-common
    jobs:
      - job: DeployTerraform
        displayName: 'Deploy ORCA Tables to Test'
        steps:
          - template: templates/terraform-deploy-steps.yml
            parameters:
              serviceConnection: 'cbs-data-preprod-mi-reporting-dev'
              environment: test
              adGroupEnvironment: $(ad_environment_name)
              orcaCatalog: $(catalog_orca)
              orcaMetadataSchema: $(schema_orca_metadata)
              orcaRuntimeSchema: $(schema_orca_runtime)
              bronzeCatalog: $(catalog_bronze)
              silverCatalog: $(catalog_silver)
              goldCatalog: $(catalog_gold)
              platinumCatalog: $(catalog_platinum)
              storageAccountName: $(storage_account)
              storageConnectorId: $(storage_connector_id)
              databricksHost: $(databricks_host)
              enableCdfForRuntime: true
              enableCdfForMetadata: false

  # UAT Deployment
  - stage: DeployUAT
    displayName: 'Deploy ORCA DDL to UAT'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    dependsOn: DeployTest
    variables:
      - group: dbx-uat-vars
      - group: dbx-unity-uat-vars  
      - group: dbx-azure-uat-vars
      - group: dbx-common
    jobs:
      - deployment: DeployTerraform
        displayName: 'Deploy ORCA Tables to UAT'
        environment: uat
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: templates/terraform-deploy-steps.yml
                  parameters:
                    serviceConnection: 'cbs-data-preprod-mi-reporting-dev'
                    environment: uat
                    adGroupEnvironment: $(ad_environment_name)
                    orcaCatalog: $(catalog_orca)
                    orcaMetadataSchema: $(schema_orca_metadata)
                    orcaRuntimeSchema: $(schema_orca_runtime)
                    bronzeCatalog: $(catalog_bronze)
                    silverCatalog: $(catalog_silver)
                    goldCatalog: $(catalog_gold)
                    platinumCatalog: $(catalog_platinum)
                    storageAccountName: $(storage_account)
                    storageConnectorId: $(storage_connector_id)
                    databricksHost: $(databricks_host)
                    enableCdfForRuntime: true
                    enableCdfForMetadata: false

  # Production Deployment
  - stage: DeployProd
    displayName: 'Deploy ORCA DDL to Production'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - group: dbx-prod-vars
      - group: dbx-unity-prod-vars  
      - group: dbx-azure-prod-vars
      - group: dbx-common
    jobs:
      - deployment: DeployTerraform
        displayName: 'Deploy ORCA Tables to Production'
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: templates/terraform-deploy-steps.yml
                  parameters:
                    serviceConnection: 'cbs-data-preprod-mi-reporting-dev'
                    environment: prod
                    adGroupEnvironment: $(ad_environment_name)
                    orcaCatalog: $(catalog_orca)
                    orcaMetadataSchema: $(schema_orca_metadata)
                    orcaRuntimeSchema: $(schema_orca_runtime)
                    bronzeCatalog: $(catalog_bronze)
                    silverCatalog: $(catalog_silver)
                    goldCatalog: $(catalog_gold)
                    platinumCatalog: $(catalog_platinum)
                    storageAccountName: $(storage_account)
                    storageConnectorId: $(storage_connector_id)
                    databricksHost: $(databricks_host)
                    enableCdfForRuntime: true
                    enableCdfForMetadata: false